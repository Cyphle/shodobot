#!/bin/bash

# Script pour construire et pousser l'image Docker LEANN vers Scaleway Container Registry
# Usage: ./build-and-push.sh [tag]
# Exemple: ./build-and-push.sh v1.0.0

set -e

# Configuration
REGISTRY_ENDPOINT="rg.fr-par.scw.cloud"
NAMESPACE="shodobot"
IMAGE_NAME="leann-api"
DEFAULT_TAG="latest"

# R√©cup√©rer le tag depuis l'argument ou utiliser 'latest'
TAG=${1:-$DEFAULT_TAG}

# Construire le nom complet de l'image
FULL_IMAGE_NAME="${REGISTRY_ENDPOINT}/${NAMESPACE}/${IMAGE_NAME}:${TAG}"

echo "üöÄ Construction et push de l'image LEANN..."
echo "üì¶ Image: ${FULL_IMAGE_NAME}"

# V√©rifier que Docker est disponible
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√© ou n'est pas dans le PATH"
    exit 1
fi

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "Dockerfile" ]; then
    echo "‚ùå Dockerfile non trouv√©. Assurez-vous d'√™tre dans le r√©pertoire infra/04-applications/04-services/leann/"
    exit 1
fi

# Construire l'image Docker
echo "üî® Construction de l'image Docker..."
docker build -t "${FULL_IMAGE_NAME}" .

# V√©rifier que la construction a r√©ussi
if [ $? -eq 0 ]; then
    echo "‚úÖ Image construite avec succ√®s: ${FULL_IMAGE_NAME}"
else
    echo "‚ùå √âchec de la construction de l'image"
    exit 1
fi

# Tagger aussi comme 'latest' si ce n'est pas d√©j√† le cas
if [ "$TAG" != "latest" ]; then
    LATEST_IMAGE_NAME="${REGISTRY_ENDPOINT}/${NAMESPACE}/${IMAGE_NAME}:latest"
    docker tag "${FULL_IMAGE_NAME}" "${LATEST_IMAGE_NAME}"
    echo "üè∑Ô∏è  Image tagg√©e comme latest: ${LATEST_IMAGE_NAME}"
fi

# Pousser l'image vers la registry
echo "üì§ Push de l'image vers Scaleway Container Registry..."

# V√©rifier si l'utilisateur est connect√© √† la registry
if ! docker info | grep -q "Registry: ${REGISTRY_ENDPOINT}"; then
    echo "‚ö†Ô∏è  Vous devez √™tre connect√© √† la registry Scaleway:"
    echo "   docker login ${REGISTRY_ENDPOINT}"
    echo "   Utilisez vos credentials Scaleway (Access Key / Secret Key)"
    echo ""
    read -p "Voulez-vous continuer quand m√™me ? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Push annul√©"
        exit 1
    fi
fi

# Push de l'image
docker push "${FULL_IMAGE_NAME}"

if [ $? -eq 0 ]; then
    echo "‚úÖ Image pouss√©e avec succ√®s: ${FULL_IMAGE_NAME}"
else
    echo "‚ùå √âchec du push de l'image"
    exit 1
fi

# Push de l'image 'latest' si n√©cessaire
if [ "$TAG" != "latest" ]; then
    docker push "${LATEST_IMAGE_NAME}"
    if [ $? -eq 0 ]; then
        echo "‚úÖ Image latest pouss√©e avec succ√®s: ${LATEST_IMAGE_NAME}"
    else
        echo "‚ùå √âchec du push de l'image latest"
        exit 1
    fi
fi

echo ""
echo "üéâ D√©ploiement termin√© avec succ√®s !"
echo "üìã R√©sum√©:"
echo "   - Image: ${FULL_IMAGE_NAME}"
if [ "$TAG" != "latest" ]; then
    echo "   - Latest: ${LATEST_IMAGE_NAME}"
fi
echo ""
echo "üöÄ Pour d√©ployer sur Kubernetes:"
echo "   kubectl apply -k infra/04-applications/04-services/leann/"
echo ""
echo "üîç Pour v√©rifier le d√©ploiement:"
echo "   kubectl get pods -n shodobot -l app=leann-api"
echo "   kubectl logs -n shodobot -l app=leann-api"
