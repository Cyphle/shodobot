version: '3.8'

services:
  # Service de base de données vectorielle simple avec Qdrant
  qdrant:
    image: qdrant/qdrant:latest
    container_name: shodobot-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # API Qdrant
      - "6334:6334"  # Web UI Qdrant
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - shodobot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Service de traitement de documents et API LEANN
  leann-api:
    image: python:3.11-slim
    container_name: shodobot-leann-api
    restart: unless-stopped
    working_dir: /app
    volumes:
      # Volume bindé pour les documents à indexer
      - ../../rag:/app/documents:ro
      # Volume persistant pour les données
      - leann_data:/app/data
      # Script Python
      - ./leann_api.py:/app/leann_api.py
    ports:
      - "8000:8000"  # API LEANN
    environment:
      - PYTHONUNBUFFERED=1
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - LEANN_DATA_DIR=/app/data
    command: >
      bash -c "
        pip install qdrant-client fastapi uvicorn python-multipart PyPDF2 python-docx &&
        python leann_api.py
      "
    networks:
      - shodobot-network
    depends_on:
      - qdrant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  qdrant_data:
    driver: local
  leann_data:
    driver: local

networks:
  shodobot-network:
    driver: bridge
